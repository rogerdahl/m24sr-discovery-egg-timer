<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\M24SR_DISCOVERY_MB1138.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\M24SR_DISCOVERY_MB1138.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 69]: Last Updated: Fri Mar 07 16:01:25 2014
<BR><P>
<H3>Maximum Stack Usage =       1104 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ReadURI &rArr; TT4_ReadURI &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3d]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[136]">NDEF_IdentifySPRecord</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[135]">NDEF_ParseRecordHeader</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3d]">ADC1_2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[5a]">ADC3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[20]">AboutFunc</a> from menu.o(i.AboutFunc) referenced 2 times from menu.o(.data)
 <LI><a href="#[1b]">AntennaPres</a> from menu.o(i.AntennaPres) referenced 2 times from menu.o(.data)
 <LI><a href="#[25]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[40]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[41]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[36]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[37]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[38]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[39]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3a]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3b]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3c]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[63]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[64]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[65]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[66]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[18]">DWLoadPhoneApp</a> from menu.o(i.DWLoadPhoneApp) referenced 4 times from menu.o(.data)
 <LI><a href="#[28]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[8]">DisableReadOnlyMode</a> from menu.o(i.DisableReadOnlyMode) referenced 2 times from menu.o(.data)
 <LI><a href="#[4]">DisableReadPWD</a> from menu.o(i.DisableReadPWD) referenced 2 times from menu.o(.data)
 <LI><a href="#[9]">DisableWriteOnlyMode</a> from menu.o(i.DisableWriteOnlyMode) referenced 2 times from menu.o(.data)
 <LI><a href="#[5]">DisableWritePWD</a> from menu.o(i.DisableWritePWD) referenced 2 times from menu.o(.data)
 <LI><a href="#[1d]">Disable_M24SR_RF</a> from menu.o(i.Disable_M24SR_RF) referenced 2 times from menu.o(.data)
 <LI><a href="#[14]">Display_Info</a> from menu.o(i.Display_Info) referenced 2 times from menu.o(.data)
 <LI><a href="#[31]">EXTI0_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[53]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[32]">EXTI1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[33]">EXTI2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[34]">EXTI3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[35]">EXTI4_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[42]">EXTI9_5_IRQHandler</a> from stm32f10x_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[6]">EnableReadOnlyMode</a> from menu.o(i.EnableReadOnlyMode) referenced 2 times from menu.o(.data)
 <LI><a href="#[0]">EnableReadPWD</a> from menu.o(i.EnableReadPWD) referenced 2 times from menu.o(.data)
 <LI><a href="#[7]">EnableWriteOnlyMode</a> from menu.o(i.EnableWriteOnlyMode) referenced 2 times from menu.o(.data)
 <LI><a href="#[2]">EnableWritePWD</a> from menu.o(i.EnableWritePWD) referenced 2 times from menu.o(.data)
 <LI><a href="#[15]">Enable_BT_Pairing</a> from menu.o(i.Enable_BT_Pairing) referenced 2 times from menu.o(.data)
 <LI><a href="#[1e]">Enable_GPO_RF</a> from menu.o(i.Enable_GPO_RF) referenced 2 times from menu.o(.data)
 <LI><a href="#[1c]">Enable_M24SR_RF</a> from menu.o(i.Enable_M24SR_RF) referenced 2 times from menu.o(.data)
 <LI><a href="#[2f]">FLASH_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[5b]">FSMC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[23]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4b]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4a]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4d]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4c]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[1]">IdleFunc</a> from menu.o(i.IdleFunc) referenced 178 times from menu.o(.data)
 <LI><a href="#[19]">LaunchDemoApp</a> from menu.o(i.LaunchDemoApp) referenced 2 times from menu.o(.data)
 <LI><a href="#[13]">Load_BT_NDEF</a> from menu.o(i.Load_BT_NDEF) referenced 2 times from menu.o(.data)
 <LI><a href="#[b]">Load_URI_Tel</a> from menu.o(i.Load_URI_Tel) referenced 2 times from menu.o(.data)
 <LI><a href="#[a]">Load_URI_URL</a> from menu.o(i.Load_URI_URL) referenced 2 times from menu.o(.data)
 <LI><a href="#[24]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[22]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[2c]">PVD_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[29]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[1a]">ProductPres</a> from menu.o(i.ProductPres) referenced 2 times from menu.o(.data)
 <LI><a href="#[30]">RCC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[54]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[2e]">RTC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[10]">ReadEmail</a> from menu.o(i.ReadEmail) referenced 2 times from menu.o(.data)
 <LI><a href="#[17]">ReadGeo</a> from menu.o(i.ReadGeo) referenced 2 times from menu.o(.data)
 <LI><a href="#[e]">ReadSMS</a> from menu.o(i.ReadSMS) referenced 2 times from menu.o(.data)
 <LI><a href="#[c]">ReadURI</a> from menu.o(i.ReadURI) referenced 2 times from menu.o(.data)
 <LI><a href="#[12]">ReadVcard</a> from menu.o(i.ReadVcard) referenced 2 times from menu.o(.data)
 <LI><a href="#[21]">Reset_Handler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3]">ReturnFunc</a> from menu.o(i.ReturnFunc) referenced 38 times from menu.o(.data)
 <LI><a href="#[5c]">SDIO_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4e]">SPI1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[4f]">SPI2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[5e]">SPI3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[27]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[1f]">SuperUser</a> from menu.o(i.SuperUser) referenced 2 times from menu.o(.data)
 <LI><a href="#[2a]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[68]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_xl.o(.text)
 <LI><a href="#[2d]">TAMPER_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[43]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[46]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[45]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[44]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[47]">TIM2_IRQHandler</a> from stm32f10x_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[48]">TIM3_IRQHandler</a> from stm32f10x_it.o(i.TIM3_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[49]">TIM4_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[5d]">TIM5_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[61]">TIM6_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[62]">TIM7_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[56]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[59]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[58]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[57]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[5f]">UART4_IRQHandler</a> from drv_bluetooth.o(i.UART4_IRQHandler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[60]">UART5_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[50]">USART1_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[51]">USART2_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[52]">USART3_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[55]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3e]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[3f]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[26]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[2b]">WWDG_IRQHandler</a> from startup_stm32f10x_xl.o(.text) referenced from startup_stm32f10x_xl.o(RESET)
 <LI><a href="#[f]">WriteEmail</a> from menu.o(i.WriteEmail) referenced 2 times from menu.o(.data)
 <LI><a href="#[16]">WriteGeo</a> from menu.o(i.WriteGeo) referenced 2 times from menu.o(.data)
 <LI><a href="#[d]">WriteSMS</a> from menu.o(i.WriteSMS) referenced 2 times from menu.o(.data)
 <LI><a href="#[11]">WriteVcard</a> from menu.o(i.WriteVcard) referenced 2 times from menu.o(.data)
 <LI><a href="#[69]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_xl.o(.text)
 <LI><a href="#[67]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[69]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(.text)
</UL>
<P><STRONG><a name="[17b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[6a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[17c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[17d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[17e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[17f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[180]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[21]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_xl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteVcard
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSMS
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteGeo
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEmail
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadVcard
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_URI_URL
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_URI_Tel
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWLoadPhoneApp
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifySPRecord
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_Extract_M24SRDiscoveryApp_Input
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillGeoStruct
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillVcardStruct
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillEmailStruct
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillSMSStruct
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_Parse_WellKnowType
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteURI
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteSMS
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteGeo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteEmail
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadURI
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadSMS
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadGeo
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadEmail
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_AddAAR
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_STReadBinary
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadBinary
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ChangeReferenceData
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IdentifyEvent
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetAnswer
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
</UL>

<P><STRONG><a name="[181]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[182]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Disable
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IdentifyEvent
</UL>

<P><STRONG><a name="[184]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[185]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a1]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteVcard
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSMS
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteGeo
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEmail
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_URI_URL
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteURI
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteSMS
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteGeo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteEmail
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_AddAAR
</UL>

<P><STRONG><a name="[89]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseWellKnownType
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseURI
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseMediaType
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseForumExternalType
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillGeoStruct
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillVcardStruct
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ExtractVcard
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillEmailStruct
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillSMSStruct
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteURI
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IdentifyEvent
</UL>

<P><STRONG><a name="[6b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[186]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>BT_Disable</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, drv_bluetooth.o(i.BT_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BT_Disable &rArr; BT_AnswerReady &rArr; delay_ms &rArr; TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendCommand
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetAnswer
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_AnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Enable
</UL>

<P><STRONG><a name="[83]"></a>BT_Enable</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drv_bluetooth.o(i.BT_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BT_Enable &rArr; BT_Disable &rArr; BT_AnswerReady &rArr; delay_ms &rArr; TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Disable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendCommand
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetAnswer
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_AnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
</UL>

<P><STRONG><a name="[87]"></a>BT_GetMacAddr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_bluetooth.o(i.BT_GetMacAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BT_GetMacAddr &rArr; BT_AnswerReady &rArr; delay_ms &rArr; TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendCommand
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetAnswer
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_AnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
</UL>

<P><STRONG><a name="[8a]"></a>BT_Init</STRONG> (Thumb, 136 bytes, Stack size 88 bytes, drv_bluetooth.o(i.BT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = BT_Init &rArr; BT_IsDevicePresent &rArr; delay_ms &rArr; TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendCommand
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Reset
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsDevicePresent
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetAnswer
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GPIO_Configuration
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CLK_Configuration
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_AnswerReady
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>DownFunc</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, menu.o(i.DownFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DownFunc &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[42]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32f10x_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = EXTI9_5_IRQHandler &rArr; UpFunc &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpFunc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFunc
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[cd]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>

<P><STRONG><a name="[cc]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>

<P><STRONG><a name="[172]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[173]"></a>FLASH_SetLatency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJoystick
</UL>

<P><STRONG><a name="[85]"></a>GPIO_Init</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Config
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJoystick
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_I2CInit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GPIO_Configuration
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
</UL>

<P><STRONG><a name="[bc]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Event
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>

<P><STRONG><a name="[d2]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
</UL>

<P><STRONG><a name="[d3]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
</UL>

<P><STRONG><a name="[d9]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_nCS_StartByte
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Close
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesWrite
</UL>

<P><STRONG><a name="[b5]"></a>GetElapsed_us</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hw_config.o(i.GetElapsed_us))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableWritePWD
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableReadPWD
</UL>

<P><STRONG><a name="[23]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[121]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_AcknowledgeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>

<P><STRONG><a name="[127]"></a>I2C_CheckEvent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32f10x_i2c.o(i.I2C_CheckEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
</UL>

<P><STRONG><a name="[120]"></a>I2C_ClearFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>

<P><STRONG><a name="[110]"></a>I2C_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_I2CInit
</UL>

<P><STRONG><a name="[bd]"></a>I2C_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_i2c.o(i.I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_I2CInit
</UL>

<P><STRONG><a name="[122]"></a>I2C_GenerateSTART</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>

<P><STRONG><a name="[100]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_KillSession
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetSession
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Deselect
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>

<P><STRONG><a name="[123]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, stm32f10x_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>

<P><STRONG><a name="[bf]"></a>I2C_Init</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, stm32f10x_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_I2CInit
</UL>

<P><STRONG><a name="[125]"></a>I2C_ReadRegister</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_i2c.o(i.I2C_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>

<P><STRONG><a name="[128]"></a>I2C_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
</UL>

<P><STRONG><a name="[124]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>

<P><STRONG><a name="[129]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
</UL>

<P><STRONG><a name="[c1]"></a>ISO7816_DisableAllPassword</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lib_iso7816_password.o(i.ISO7816_DisableAllPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ISO7816_DisableAllPassword &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableAllPassword
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperUser
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DemoInit
</UL>

<P><STRONG><a name="[9b]"></a>ISO7816_DisableReadPwd</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lib_iso7816_password.o(i.ISO7816_DisableReadPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ISO7816_DisableReadPwd &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableReadPassword
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableReadPWD
</UL>

<P><STRONG><a name="[9e]"></a>ISO7816_DisableWritePwd</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lib_iso7816_password.o(i.ISO7816_DisableWritePwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ISO7816_DisableWritePwd &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableWritePassword
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableWritePWD
</UL>

<P><STRONG><a name="[b6]"></a>ISO7816_EnableReadPwd</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lib_iso7816_password.o(i.ISO7816_EnableReadPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ISO7816_EnableReadPwd &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableReadPassword
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableReadPWD
</UL>

<P><STRONG><a name="[b8]"></a>ISO7816_EnableWritePwd</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lib_iso7816_password.o(i.ISO7816_EnableWritePwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ISO7816_EnableWritePwd &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableWritePassword
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableWritePWD
</UL>

<P><STRONG><a name="[ca]"></a>InitJoystick</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, menu.o(i.InitJoystick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitJoystick &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>IntExtOnOffConfig</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, main.o(i.IntExtOnOffConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IntExtOnOffConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_StructInit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDwLdPhoneAppMessage
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutFunc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>Interrupts_Config</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, hw_config.o(i.Interrupts_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Interrupts_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>IsBTModulePresent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_bluetooth.o(i.IsBTModulePresent))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIcons
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[f1]"></a>IsLED_On</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, drv_led.o(i.IsLED_On))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
</UL>

<P><STRONG><a name="[d1]"></a>LCD_ChipSelect</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_ChipSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_ChipSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
</UL>

<P><STRONG><a name="[70]"></a>LCD_Clear</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drv_lcdspi_ili9341.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_Clear &rArr; LCD_SetDisplayWindow &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Close
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessageOnGoing
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDwLdPhoneAppMessage
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutFunc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[75]"></a>LCD_ClearLine</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, drv_lcdspi_ili9341.o(i.LCD_ClearLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_ClearLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutFunc
</UL>

<P><STRONG><a name="[e0]"></a>LCD_CtrlLinesConfig_ILI9341</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drv_lcdspi_ili9341.o(i.LCD_CtrlLinesConfig_ILI9341))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[d8]"></a>LCD_CtrlLinesWrite</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, drv_lcdspi_ili9341.o(i.LCD_CtrlLinesWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
</UL>

<P><STRONG><a name="[d7]"></a>LCD_DisplayChar</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, drv_lcdspi_ili9341.o(i.LCD_DisplayChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLineWSize
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearLine
</UL>

<P><STRONG><a name="[76]"></a>LCD_DisplayStringLine</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, drv_lcdspi_ili9341.o(i.LCD_DisplayStringLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpFunc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFunc
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessageOnGoing
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDwLdPhoneAppMessage
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutFunc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[a2]"></a>LCD_DisplayStringLineWSize</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, drv_lcdspi_ili9341.o(i.LCD_DisplayStringLineWSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD_DisplayStringLineWSize &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
</UL>

<P><STRONG><a name="[da]"></a>LCD_DrawChar</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, drv_lcdspi_ili9341.o(i.LCD_DrawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>

<P><STRONG><a name="[ba]"></a>LCD_DrawFullRect</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, drv_lcdspi_ili9341.o(i.LCD_DrawFullRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_DrawFullRect &rArr; LCD_DrawLine &rArr; LCD_SetCursor_onwindows &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
</UL>

<P><STRONG><a name="[dc]"></a>LCD_DrawLine</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, drv_lcdspi_ili9341.o(i.LCD_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LCD_DrawLine &rArr; LCD_SetCursor_onwindows &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor_onwindows
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
</UL>

<P><STRONG><a name="[de]"></a>LCD_DrawRect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, drv_lcdspi_ili9341.o(i.LCD_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_DrawRect &rArr; LCD_DrawLine &rArr; LCD_SetCursor_onwindows &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[df]"></a>LCD_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_Init &rArr; LCD_SPIConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig_ILI9341
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e3]"></a>LCD_PowerOn</STRONG> (Thumb, 778 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_PowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_PowerOn &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataSizeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[e1]"></a>LCD_SPIConfig</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, drv_lcdspi_ili9341.o(i.LCD_SPIConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_SPIConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[73]"></a>LCD_SetBackColor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_SetBackColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpFunc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFunc
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessageOnGoing
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDwLdPhoneAppMessage
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutFunc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[db]"></a>LCD_SetCursor</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drv_lcdspi_ili9341.o(i.LCD_SetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataSizeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
</UL>

<P><STRONG><a name="[dd]"></a>LCD_SetCursor_onwindows</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, drv_lcdspi_ili9341.o(i.LCD_SetCursor_onwindows))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_SetCursor_onwindows &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataSizeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[7a]"></a>LCD_SetDisplayWindow</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, drv_lcdspi_ili9341.o(i.LCD_SetDisplayWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_SetDisplayWindow &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataSizeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowModeDisable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
</UL>

<P><STRONG><a name="[74]"></a>LCD_SetTextColor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetTextColor
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpFunc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFunc
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessageOnGoing
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDwLdPhoneAppMessage
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutFunc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[ea]"></a>LCD_WindowModeDisable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_WindowModeDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[7b]"></a>LCD_WriteBMP_FAT</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, drv_lcdspi_ili9341.o(i.LCD_WriteBMP_FAT))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_WriteBMP_FAT &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowModeDisable
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Close
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataSizeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIcons
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STIntro
</UL>

<P><STRONG><a name="[e4]"></a>LCD_WriteCommand</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_WriteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_WriteCommand &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesWrite
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor_onwindows
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
</UL>

<P><STRONG><a name="[e5]"></a>LCD_WriteData</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesWrite
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ChipSelect
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor_onwindows
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
</UL>

<P><STRONG><a name="[d5]"></a>LCD_WriteRAM</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_WriteRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_WriteRAM &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
</UL>

<P><STRONG><a name="[d6]"></a>LCD_WriteRAM_Close</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_WriteRAM_Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_WriteRAM_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataSizeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[d4]"></a>LCD_WriteRAM_Prepare</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_WriteRAM_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_WriteRAM_Prepare &rArr; LCD_WriteCommand &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_nCS_StartByte
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataSizeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
</UL>

<P><STRONG><a name="[ed]"></a>LCD_nCS_StartByte</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_lcdspi_ili9341.o(i.LCD_nCS_StartByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_nCS_StartByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataSizeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
</UL>

<P><STRONG><a name="[ee]"></a>LED_Config</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, drv_led.o(i.LED_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LED_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[99]"></a>LED_Off</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drv_led.o(i.LED_Off))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperUser
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableWritePWD
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableWriteOnlyMode
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableReadPWD
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableReadOnlyMode
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Show
</UL>

<P><STRONG><a name="[b4]"></a>LED_On</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, drv_led.o(i.LED_On))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableWritePWD
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableWriteOnlyMode
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableReadPWD
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableReadOnlyMode
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Show
</UL>

<P><STRONG><a name="[f8]"></a>M24SR_ChangeReferenceData</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, drv_m24sr.o(i.M24SR_ChangeReferenceData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = M24SR_ChangeReferenceData &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableWritePassword
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableReadPassword
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableAllPassword
</UL>

<P><STRONG><a name="[c5]"></a>M24SR_CloseNDEFSession</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_CloseNDEFSession))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = M24SR_CloseNDEFSession &rArr; M24SR_Deselect &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Deselect
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteURI
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteSMS
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteNDEF
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteGeo
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteEmail
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadVcard
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadURI
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadSMS
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadMyApp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadGeo
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadEmail
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_AddAAR
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_GPOConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableWriteOnly
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableReadOnly
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableWriteOnly
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableReadOnly
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableWritePwd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableReadPwd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableWritePwd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableReadPwd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableAllPassword
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadSMS
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadGeo
</UL>

<P><STRONG><a name="[fd]"></a>M24SR_Deselect</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, drv_m24sr.o(i.M24SR_Deselect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = M24SR_Deselect &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Initialization
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Init
</UL>

<P><STRONG><a name="[c4]"></a>M24SR_DisableAllPassword</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_DisableAllPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_DisableAllPassword &rArr; M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisablePermanentState
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ChangeReferenceData
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableAllPassword
</UL>

<P><STRONG><a name="[102]"></a>M24SR_DisablePermanentState</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, drv_m24sr.o(i.M24SR_DisablePermanentState))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = M24SR_DisablePermanentState &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableWriteOnly
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableReadOnly
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableAllPassword
</UL>

<P><STRONG><a name="[104]"></a>M24SR_DisableReadOnly</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_DisableReadOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_DisableReadOnly &rArr; M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisablePermanentState
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableReadOnly
</UL>

<P><STRONG><a name="[c6]"></a>M24SR_DisableReadPassword</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_DisableReadPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_DisableReadPassword &rArr; M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableReadPwd
</UL>

<P><STRONG><a name="[103]"></a>M24SR_DisableVerificationRequirement</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, drv_m24sr.o(i.M24SR_DisableVerificationRequirement))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = M24SR_DisableVerificationRequirement &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableWritePassword
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableWriteOnly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableReadPassword
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableReadOnly
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableAllPassword
</UL>

<P><STRONG><a name="[105]"></a>M24SR_DisableWriteOnly</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_DisableWriteOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_DisableWriteOnly &rArr; M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisablePermanentState
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableWriteOnly
</UL>

<P><STRONG><a name="[c7]"></a>M24SR_DisableWritePassword</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_DisableWritePassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_DisableWritePassword &rArr; M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableWritePwd
</UL>

<P><STRONG><a name="[106]"></a>M24SR_EnablePermanentState</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, drv_m24sr.o(i.M24SR_EnablePermanentState))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = M24SR_EnablePermanentState &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableWriteOnly
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableReadOnly
</UL>

<P><STRONG><a name="[107]"></a>M24SR_EnableReadOnly</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_EnableReadOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_EnableReadOnly &rArr; M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnablePermanentState
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableReadOnly
</UL>

<P><STRONG><a name="[c8]"></a>M24SR_EnableReadPassword</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_EnableReadPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_EnableReadPassword &rArr; M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableVerificationRequirement
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ChangeReferenceData
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableReadPwd
</UL>

<P><STRONG><a name="[108]"></a>M24SR_EnableVerificationRequirement</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, drv_m24sr.o(i.M24SR_EnableVerificationRequirement))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = M24SR_EnableVerificationRequirement &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableWritePassword
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableReadPassword
</UL>

<P><STRONG><a name="[109]"></a>M24SR_EnableWriteOnly</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_EnableWriteOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_EnableWriteOnly &rArr; M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnablePermanentState
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableWriteOnly
</UL>

<P><STRONG><a name="[c9]"></a>M24SR_EnableWritePassword</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_EnableWritePassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_EnableWritePassword &rArr; M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableVerificationRequirement
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ChangeReferenceData
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableWritePwd
</UL>

<P><STRONG><a name="[10b]"></a>M24SR_ForceReadData</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, lib_m24sr.o(i.M24SR_ForceReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = M24SR_ForceReadData &rArr; M24SR_STReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_STReadBinary
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_AddAAR
</UL>

<P><STRONG><a name="[c2]"></a>M24SR_GetNDEFFileId</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lib_m24sr.o(i.M24SR_GetNDEFFileId))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_GPOConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableWriteOnly
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableReadOnly
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableWriteOnly
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableReadOnly
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableWritePwd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableReadPwd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableWritePwd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableReadPwd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableAllPassword
</UL>

<P><STRONG><a name="[10d]"></a>M24SR_GetSession</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, drv_m24sr.o(i.M24SR_GetSession))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M24SR_GetSession &rArr; M24SR_SendI2Ccommand &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Initialization
</UL>

<P><STRONG><a name="[10f]"></a>M24SR_I2CInit</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, drv_i2c_m24sr.o(i.M24SR_I2CInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = M24SR_I2CInit &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Init
</UL>

<P><STRONG><a name="[111]"></a>M24SR_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_m24sr.o(i.M24SR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = M24SR_Init &rArr; M24SR_ManageI2CGPO &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageI2CGPO
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_KillSession
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Deselect
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_InitStructure
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_I2CInit
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Initialization
</UL>

<P><STRONG><a name="[115]"></a>M24SR_Initialization</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, lib_m24sr.o(i.M24SR_Initialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = M24SR_Initialization &rArr; M24SR_Init &rArr; M24SR_ManageI2CGPO &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadData
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectCCfile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetSession
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Deselect
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_Init
</UL>

<P><STRONG><a name="[fa]"></a>M24SR_IsAnswerReady</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, drv_i2c_m24sr.o(i.M24SR_IsAnswerReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectSystemfile
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectNDEFfile
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectCCfile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_STReadBinary
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadBinary
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableVerificationRequirement
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnablePermanentState
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisablePermanentState
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Deselect
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ChangeReferenceData
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_FWTExtension
</UL>

<P><STRONG><a name="[113]"></a>M24SR_KillSession</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, drv_m24sr.o(i.M24SR_KillSession))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M24SR_KillSession &rArr; M24SR_SendI2Ccommand &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Init
</UL>

<P><STRONG><a name="[119]"></a>M24SR_ManageGPO</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lib_m24sr.o(i.M24SR_ManageGPO))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = M24SR_ManageGPO &rArr; M24SR_ManageRFGPO &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageRFGPO
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageI2CGPO
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_GPOConfig
</UL>

<P><STRONG><a name="[114]"></a>M24SR_ManageI2CGPO</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, drv_m24sr.o(i.M24SR_ManageI2CGPO))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = M24SR_ManageI2CGPO &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectSystemfile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadBinary
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SetI2CSynchroMode
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageGPO
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Init
</UL>

<P><STRONG><a name="[11a]"></a>M24SR_ManageRFGPO</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, drv_m24sr.o(i.M24SR_ManageRFGPO))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = M24SR_ManageRFGPO &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectSystemfile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadBinary
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageGPO
</UL>

<P><STRONG><a name="[c3]"></a>M24SR_OpenNDEFSession</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, lib_m24sr.o(i.M24SR_OpenNDEFSession))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectNDEFfile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_KillSession
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetSession
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteURI
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteSMS
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteNDEF
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteGeo
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteEmail
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadVcard
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadURI
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadSMS
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadMyApp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadGeo
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadEmail
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_AddAAR
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_GPOConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableWriteOnly
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableReadOnly
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableWriteOnly
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableReadOnly
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableWritePwd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableReadPwd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableWritePwd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableReadPwd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableAllPassword
</UL>

<P><STRONG><a name="[10e]"></a>M24SR_PollI2C</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, drv_i2c_m24sr.o(i.M24SR_PollI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadRegister
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_KillSession
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetSession
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>

<P><STRONG><a name="[9f]"></a>M24SR_RFConfig</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_m24sr.o(i.M24SR_RFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = M24SR_RFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_RFConfig_Hard
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[126]"></a>M24SR_RFConfig_Hard</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_i2c_m24sr.o(i.M24SR_RFConfig_Hard))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_RFConfig
</UL>

<P><STRONG><a name="[11d]"></a>M24SR_ReadBinary</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, drv_m24sr.o(i.M24SR_ReadBinary))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadData
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageRFGPO
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageI2CGPO
</UL>

<P><STRONG><a name="[118]"></a>M24SR_ReadData</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, lib_m24sr.o(i.M24SR_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadBinary
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IsNDEFPresent
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Initialization
</UL>

<P><STRONG><a name="[fb]"></a>M24SR_ReceiveI2Cresponse</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, drv_i2c_m24sr.o(i.M24SR_ReceiveI2Cresponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = M24SR_ReceiveI2Cresponse &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectSystemfile
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectNDEFfile
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectCCfile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_STReadBinary
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadBinary
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableVerificationRequirement
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnablePermanentState
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisablePermanentState
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Deselect
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ChangeReferenceData
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_FWTExtension
</UL>

<P><STRONG><a name="[10c]"></a>M24SR_STReadBinary</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, drv_m24sr.o(i.M24SR_STReadBinary))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = M24SR_STReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ForceReadData
</UL>

<P><STRONG><a name="[116]"></a>M24SR_SelectApplication</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, drv_m24sr.o(i.M24SR_SelectApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Initialization
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageRFGPO
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageI2CGPO
</UL>

<P><STRONG><a name="[117]"></a>M24SR_SelectCCfile</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, drv_m24sr.o(i.M24SR_SelectCCfile))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = M24SR_SelectCCfile &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Initialization
</UL>

<P><STRONG><a name="[11f]"></a>M24SR_SelectNDEFfile</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, drv_m24sr.o(i.M24SR_SelectNDEFfile))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = M24SR_SelectNDEFfile &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
</UL>

<P><STRONG><a name="[11c]"></a>M24SR_SelectSystemfile</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, drv_m24sr.o(i.M24SR_SelectSystemfile))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = M24SR_SelectSystemfile &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageRFGPO
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageI2CGPO
</UL>

<P><STRONG><a name="[f9]"></a>M24SR_SendI2Ccommand</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, drv_i2c_m24sr.o(i.M24SR_SendI2Ccommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = M24SR_SendI2Ccommand &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectSystemfile
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectNDEFfile
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectCCfile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_STReadBinary
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadBinary
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_KillSession
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetSession
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableVerificationRequirement
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnablePermanentState
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisablePermanentState
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Deselect
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ChangeReferenceData
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_FWTExtension
</UL>

<P><STRONG><a name="[11b]"></a>M24SR_SetI2CSynchroMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_i2c_m24sr.o(i.M24SR_SetI2CSynchroMode))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageI2CGPO
</UL>

<P><STRONG><a name="[11e]"></a>M24SR_UpdateBinary</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, drv_m24sr.o(i.M24SR_UpdateBinary))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_FWTExtension
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSBlock
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_WriteData
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageRFGPO
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageI2CGPO
</UL>

<P><STRONG><a name="[101]"></a>M24SR_Verify</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, drv_m24sr.o(i.M24SR_Verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = M24SR_Verify &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableWritePassword
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableWriteOnly
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableReadPassword
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableReadOnly
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableWritePassword
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableWriteOnly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableReadPassword
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableReadOnly
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableAllPassword
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageRFGPO
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageI2CGPO
</UL>

<P><STRONG><a name="[12b]"></a>M24SR_WriteData</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, lib_m24sr.o(i.M24SR_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteURI
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteSMS
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteNDEF
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteGeo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteEmail
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_AddAAR
</UL>

<P><STRONG><a name="[24]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[12c]"></a>NDEF_AddAAR</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, lib_ndef_aar.o(i.NDEF_AddAAR))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = NDEF_AddAAR &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_WriteData
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ForceReadData
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_AddAAR
</UL>

<P><STRONG><a name="[133]"></a>NDEF_IdentifyNDEF</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, lib_ndef.o(i.NDEF_IdentifyNDEF))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseRecordHeader
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IsNDEFPresent
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadData
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadVcard
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadURI
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadSMS
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadMyApp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadGeo
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadEmail
</UL>

<P><STRONG><a name="[13d]"></a>NDEF_ReadEmail</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, lib_ndef_email.o(i.NDEF_ReadEmail))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = NDEF_ReadEmail &rArr; NDEF_ReadURI_Email &rArr; NDEF_FillEmailStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadURI_Email
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadEmail
</UL>

<P><STRONG><a name="[13f]"></a>NDEF_ReadGeo</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, lib_ndef_geo.o(i.NDEF_ReadGeo))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = NDEF_ReadGeo &rArr; M24SR_CloseNDEFSession &rArr; M24SR_Deselect &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadURI_Geo
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadGeo
</UL>

<P><STRONG><a name="[141]"></a>NDEF_ReadMyApp</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lib_ndef_myapp.o(i.NDEF_ReadMyApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NDEF_ReadMyApp &rArr; NDEF_Extract_M24SRDiscoveryApp_Input
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_Extract_M24SRDiscoveryApp_Input
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadMyApp
</UL>

<P><STRONG><a name="[142]"></a>NDEF_ReadSMS</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, lib_ndef_sms.o(i.NDEF_ReadSMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = NDEF_ReadSMS &rArr; M24SR_CloseNDEFSession &rArr; M24SR_Deselect &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadURI_SMS
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadSMS
</UL>

<P><STRONG><a name="[144]"></a>NDEF_ReadURI</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lib_ndef_uri.o(i.NDEF_ReadURI))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NDEF_ReadURI &rArr; NDEF_Parse_WellKnowType
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_Parse_WellKnowType
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadURI
</UL>

<P><STRONG><a name="[145]"></a>NDEF_ReadVcard</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lib_ndef_vcard.o(i.NDEF_ReadVcard))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = NDEF_ReadVcard &rArr; NDEF_ExtractVcard &rArr; NDEF_FillVcardStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ExtractVcard
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadVcard
</UL>

<P><STRONG><a name="[146]"></a>NDEF_WriteEmail</STRONG> (Thumb, 702 bytes, Stack size 40 bytes, lib_ndef_email.o(i.NDEF_WriteEmail))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = NDEF_WriteEmail &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_WriteData
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteEmail
</UL>

<P><STRONG><a name="[147]"></a>NDEF_WriteGeo</STRONG> (Thumb, 558 bytes, Stack size 40 bytes, lib_ndef_geo.o(i.NDEF_WriteGeo))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = NDEF_WriteGeo &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_WriteData
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteGeo
</UL>

<P><STRONG><a name="[148]"></a>NDEF_WriteNDEF</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lib_ndef.o(i.NDEF_WriteNDEF))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = NDEF_WriteNDEF &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteNDEF
</UL>

<P><STRONG><a name="[149]"></a>NDEF_WriteSMS</STRONG> (Thumb, 580 bytes, Stack size 40 bytes, lib_ndef_sms.o(i.NDEF_WriteSMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = NDEF_WriteSMS &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_WriteData
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteSMS
</UL>

<P><STRONG><a name="[14a]"></a>NDEF_WriteURI</STRONG> (Thumb, 774 bytes, Stack size 24 bytes, lib_ndef_uri.o(i.NDEF_WriteURI))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = NDEF_WriteURI &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_WriteData
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteURI
</UL>

<P><STRONG><a name="[22]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>NVIC_Init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config
</UL>

<P><STRONG><a name="[cf]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config
</UL>

<P><STRONG><a name="[29]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[159]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[7f]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_I2CInit
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_RCC_Config
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CLK_Configuration
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
</UL>

<P><STRONG><a name="[be]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[7e]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Config
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJoystick
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_I2CInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_CLK_Configuration
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
</UL>

<P><STRONG><a name="[153]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[c0]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[14c]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17a]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[174]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[171]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[176]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[175]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK2Config))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[178]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[177]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[179]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14b]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e9]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
</UL>

<P><STRONG><a name="[e6]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_DataSizeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_nCS_StartByte
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Close
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor_onwindows
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
</UL>

<P><STRONG><a name="[e7]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_I2S_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
</UL>

<P><STRONG><a name="[ec]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
</UL>

<P><STRONG><a name="[eb]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
</UL>

<P><STRONG><a name="[e8]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPIConfig
</UL>

<P><STRONG><a name="[154]"></a>STIntro</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menu.o(i.STIntro))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = STIntro &rArr; LCD_WriteBMP_FAT &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>STProprietary_DisableReadOnly</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lib_stproprietary_feature.o(i.STProprietary_DisableReadOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = STProprietary_DisableReadOnly &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableReadOnly
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableReadOnlyMode
</UL>

<P><STRONG><a name="[9d]"></a>STProprietary_DisableWriteOnly</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lib_stproprietary_feature.o(i.STProprietary_DisableWriteOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = STProprietary_DisableWriteOnly &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableWriteOnly
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableWriteOnlyMode
</UL>

<P><STRONG><a name="[b3]"></a>STProprietary_EnableReadOnly</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lib_stproprietary_feature.o(i.STProprietary_EnableReadOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = STProprietary_EnableReadOnly &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableReadOnly
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableReadOnlyMode
</UL>

<P><STRONG><a name="[b7]"></a>STProprietary_EnableWriteOnly</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lib_stproprietary_feature.o(i.STProprietary_EnableWriteOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = STProprietary_EnableWriteOnly &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableWriteOnly
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableWriteOnlyMode
</UL>

<P><STRONG><a name="[b9]"></a>STProprietary_GPOConfig</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lib_stproprietary_feature.o(i.STProprietary_GPOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = STProprietary_GPOConfig &rArr; M24SR_ManageGPO &rArr; M24SR_ManageRFGPO &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ManageGPO
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_GetNDEFFileId
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
</UL>

<P><STRONG><a name="[27]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[155]"></a>SelFunc</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, menu.o(i.SelFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SelFunc &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[152]"></a>ShowMenuIcons</STRONG> (Thumb, 668 bytes, Stack size 16 bytes, menu.o(i.ShowMenuIcons))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ShowMenuIcons &rArr; SelFunc &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowModeDisable
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBTModulePresent
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIcons
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelFunc
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnFunc
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15a]"></a>StartPerfMeasurement</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, hw_config.o(i.StartPerfMeasurement))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = StartPerfMeasurement &rArr; TimerTimestamp_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerTimestamp_us_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15e]"></a>SysTick_Configuration</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, main.o(i.SysTick_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Configuration &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>TIM2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f10x_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decrement_delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f10x_it.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;increment_timestamp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[160]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Structure_Config
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerTimestamp_us_Config
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_us_Config
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_ms_Config
</UL>

<P><STRONG><a name="[15d]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartPerfMeasurement
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerTimestamp_us_Config
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_us_Config
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_ms_Config
</UL>

<P><STRONG><a name="[16a]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Structure_Config
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerTimestamp_us_Config
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_us_Config
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_ms_Config
</UL>

<P><STRONG><a name="[15c]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartPerfMeasurement
</UL>

<P><STRONG><a name="[168]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Structure_Config
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerTimestamp_us_Config
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_us_Config
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_ms_Config
</UL>

<P><STRONG><a name="[169]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_UpdateRequestConfig))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Structure_Config
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerTimestamp_us_Config
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_us_Config
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_ms_Config
</UL>

<P><STRONG><a name="[93]"></a>TT4_AddAAR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lib_tagtype4.o(i.TT4_AddAAR))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_AddAAR &rArr; NDEF_AddAAR &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_AddAAR
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWLoadPhoneApp
</UL>

<P><STRONG><a name="[163]"></a>TT4_Init</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lib_tagtype4.o(i.TT4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = TT4_Init &rArr; M24SR_Initialization &rArr; M24SR_Init &rArr; M24SR_ManageI2CGPO &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Initialization
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14d]"></a>TT4_ReadEmail</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lib_tagtype4.o(i.TT4_ReadEmail))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_ReadEmail &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadEmail
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
</UL>

<P><STRONG><a name="[14e]"></a>TT4_ReadGeo</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lib_tagtype4.o(i.TT4_ReadGeo))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_ReadGeo &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadGeo
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
</UL>

<P><STRONG><a name="[f2]"></a>TT4_ReadMyApp</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, lib_tagtype4.o(i.TT4_ReadMyApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_ReadMyApp &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadMyApp
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
</UL>

<P><STRONG><a name="[14f]"></a>TT4_ReadSMS</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lib_tagtype4.o(i.TT4_ReadSMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_ReadSMS &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadSMS
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
</UL>

<P><STRONG><a name="[150]"></a>TT4_ReadURI</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lib_tagtype4.o(i.TT4_ReadURI))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_ReadURI &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadURI
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
</UL>

<P><STRONG><a name="[151]"></a>TT4_ReadVcard</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lib_tagtype4.o(i.TT4_ReadVcard))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_ReadVcard &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadVcard
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadVcard
</UL>

<P><STRONG><a name="[164]"></a>TT4_WriteEmail</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lib_tagtype4.o(i.TT4_WriteEmail))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_WriteEmail &rArr; NDEF_WriteEmail &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteEmail
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEmail
</UL>

<P><STRONG><a name="[165]"></a>TT4_WriteGeo</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lib_tagtype4.o(i.TT4_WriteGeo))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_WriteGeo &rArr; NDEF_WriteGeo &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteGeo
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteGeo
</UL>

<P><STRONG><a name="[92]"></a>TT4_WriteNDEF</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lib_tagtype4.o(i.TT4_WriteNDEF))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TT4_WriteNDEF &rArr; NDEF_WriteNDEF &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteNDEF
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteVcard
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWLoadPhoneApp
</UL>

<P><STRONG><a name="[166]"></a>TT4_WriteSMS</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lib_tagtype4.o(i.TT4_WriteSMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TT4_WriteSMS &rArr; NDEF_WriteSMS &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteSMS
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSMS
</UL>

<P><STRONG><a name="[f5]"></a>TT4_WriteURI</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lib_tagtype4.o(i.TT4_WriteURI))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = TT4_WriteURI &rArr; NDEF_WriteURI &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_WriteURI
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_CloseNDEFSession
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_URI_URL
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_URI_Tel
</UL>

<P><STRONG><a name="[16c]"></a>Timer_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hw_config.o(i.Timer_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Timer_Config &rArr; Timer_Structure_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Structure_Config
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_RCC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16d]"></a>Timer_RCC_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hw_config.o(i.Timer_RCC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer_RCC_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Config
</UL>

<P><STRONG><a name="[16e]"></a>Timer_Structure_Config</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, hw_config.o(i.Timer_Structure_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Timer_Structure_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_UpdateRequestConfig
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Config
</UL>

<P><STRONG><a name="[5f]"></a>UART4_IRQHandler</STRONG> (Thumb, 170 bytes, Stack size 88 bytes, drv_bluetooth.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UART4_IRQHandler &rArr; BT_IdentifyEvent &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IdentifyEvent
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[90]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendCommand
</UL>

<P><STRONG><a name="[16f]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[8c]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[170]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendCommand
</UL>

<P><STRONG><a name="[b2]"></a>UpFunc</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, menu.o(i.UpFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UpFunc &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[26]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_xl.o(RESET)
</UL>
<P><STRONG><a name="[189]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[18a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[18b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[161]"></a>decrement_delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hw_config.o(i.decrement_delay))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>delay_ms</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hw_config.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_ms &rArr; TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_ms_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Show
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_OpenNDEFSession
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Initialization
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Reset
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsDevicePresent
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_AnswerReady
</UL>

<P><STRONG><a name="[f3]"></a>delay_us</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hw_config.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelay_us_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_PollI2C
</UL>

<P><STRONG><a name="[162]"></a>increment_timestamp</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hw_config.o(i.increment_timestamp))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[67]"></a>main</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = main &rArr; TT4_Init &rArr; M24SR_Initialization &rArr; M24SR_Init &rArr; M24SR_ManageI2CGPO &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Config
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_Init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartPerfMeasurement
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelFunc
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STIntro
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_RFConfig
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJoystick
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Configuration
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DemoInit
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Show
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ef]"></a>LED_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LED_Init &rArr; LED_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f0]"></a>LED_Show</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.LED_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LED_Show &rArr; delay_ms &rArr; TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ff]"></a>M24SR_DemoInit</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, main.o(i.M24SR_DemoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = M24SR_DemoInit &rArr; ISO7816_DisableAllPassword &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableAllPassword
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Configuration
</UL>

<P><STRONG><a name="[20]"></a>AboutFunc</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, menu.o(i.AboutFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = AboutFunc &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>AntennaPres</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, menu.o(i.AntennaPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = AntennaPres &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[f4]"></a>Char2Hex</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, menu.o(i.Char2Hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Char2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
</UL>

<P><STRONG><a name="[18]"></a>DWLoadPhoneApp</STRONG> (Thumb, 54 bytes, Stack size 96 bytes, menu.o(i.DWLoadPhoneApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = DWLoadPhoneApp &rArr; TT4_AddAAR &rArr; NDEF_AddAAR &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteNDEF
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_AddAAR
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDwLdPhoneAppMessage
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[96]"></a>DelayJoyStick</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, menu.o(i.DelayJoyStick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DelayJoyStick &rArr; ReadKey
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
</UL>

<P><STRONG><a name="[8]"></a>DisableReadOnlyMode</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, menu.o(i.DisableReadOnlyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DisableReadOnlyMode &rArr; STProprietary_DisableReadOnly &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableReadOnly
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>DisableReadPWD</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, menu.o(i.DisableReadPWD))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DisableReadPWD &rArr; ISO7816_DisableReadPwd &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableReadPwd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>DisableWriteOnlyMode</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, menu.o(i.DisableWriteOnlyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DisableWriteOnlyMode &rArr; STProprietary_DisableWriteOnly &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_DisableWriteOnly
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>DisableWritePWD</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, menu.o(i.DisableWritePWD))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DisableWritePWD &rArr; ISO7816_DisableWritePwd &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableWritePwd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>Disable_M24SR_RF</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, menu.o(i.Disable_M24SR_RF))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Disable_M24SR_RF &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_RFConfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[94]"></a>DisplayDwLdPhoneAppMessage</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, menu.o(i.DisplayDwLdPhoneAppMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DisplayDwLdPhoneAppMessage &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWLoadPhoneApp
</UL>

<P><STRONG><a name="[a0]"></a>DisplayEmail</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, menu.o(i.DisplayEmail))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DisplayEmail &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLineWSize
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
</UL>

<P><STRONG><a name="[95]"></a>DisplayErrorMessage</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, menu.o(i.DisplayErrorMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DisplayErrorMessage &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteVcard
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSMS
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteGeo
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEmail
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_URI_URL
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_URI_Tel
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWLoadPhoneApp
</UL>

<P><STRONG><a name="[a3]"></a>DisplayGeo</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, menu.o(i.DisplayGeo))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DisplayGeo &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLineWSize
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
</UL>

<P><STRONG><a name="[a4]"></a>DisplayIcons</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, menu.o(i.DisplayIcons))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DisplayIcons &rArr; LCD_WriteBMP_FAT &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBTModulePresent
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[a6]"></a>DisplayLockPassword</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, menu.o(i.DisplayLockPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DisplayLockPassword &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLineWSize
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Char
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableWritePWD
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableReadPWD
</UL>

<P><STRONG><a name="[78]"></a>DisplayMenu</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, menu.o(i.DisplayMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnFunc
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDwLdPhoneAppMessage
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutFunc
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelFunc
</UL>

<P><STRONG><a name="[a8]"></a>DisplayMessage</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, menu.o(i.DisplayMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplayMessage &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLineWSize
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteVcard
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSMS
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteGeo
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEmail
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_URI_URL
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_URI_Tel
</UL>

<P><STRONG><a name="[a9]"></a>DisplayMessageOnGoing</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, menu.o(i.DisplayMessageOnGoing))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DisplayMessageOnGoing &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteVcard
</UL>

<P><STRONG><a name="[9a]"></a>DisplayNormalMode</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, menu.o(i.DisplayNormalMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DisplayNormalMode &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableWriteOnlyMode
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableReadOnlyMode
</UL>

<P><STRONG><a name="[aa]"></a>DisplaySMS</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, menu.o(i.DisplaySMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DisplaySMS &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLineWSize
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
</UL>

<P><STRONG><a name="[ab]"></a>DisplayURI</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, menu.o(i.DisplayURI))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DisplayURI &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLineWSize
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
</UL>

<P><STRONG><a name="[9c]"></a>DisplayUnLockPassword</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, menu.o(i.DisplayUnLockPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DisplayUnLockPassword &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SuperUser
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableWritePWD
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableReadPWD
</UL>

<P><STRONG><a name="[ac]"></a>DisplayVcard</STRONG> (Thumb, 468 bytes, Stack size 16 bytes, menu.o(i.DisplayVcard))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplayVcard &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLineWSize
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadVcard
</UL>

<P><STRONG><a name="[14]"></a>Display_Info</STRONG> (Thumb, 908 bytes, Stack size 128 bytes, menu.o(i.Display_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Display_Info &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLineWSize
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[ae]"></a>DisplaylimitedAccess</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, menu.o(i.DisplaylimitedAccess))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DisplaylimitedAccess &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableWriteOnlyMode
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableReadOnlyMode
</UL>

<P><STRONG><a name="[6]"></a>EnableReadOnlyMode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, menu.o(i.EnableReadOnlyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EnableReadOnlyMode &rArr; STProprietary_EnableReadOnly &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableReadOnly
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>EnableReadPWD</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, menu.o(i.EnableReadPWD))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = EnableReadPWD &rArr; DisplayLockPassword &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableReadPwd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetElapsed_us
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>EnableWriteOnlyMode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, menu.o(i.EnableWriteOnlyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EnableWriteOnlyMode &rArr; STProprietary_EnableWriteOnly &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_EnableWriteOnly
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>EnableWritePWD</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, menu.o(i.EnableWritePWD))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = EnableWritePWD &rArr; DisplayLockPassword &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_EnableWritePwd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetElapsed_us
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>Enable_BT_Pairing</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, menu.o(i.Enable_BT_Pairing))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Enable_BT_Pairing &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Enable
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>Enable_GPO_RF</STRONG> (Thumb, 532 bytes, Stack size 104 bytes, menu.o(i.Enable_GPO_RF))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Enable_GPO_RF &rArr; TT4_AddAAR &rArr; NDEF_AddAAR &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteNDEF
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_AddAAR
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_GPOConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Event
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>Enable_M24SR_RF</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, menu.o(i.Enable_M24SR_RF))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Enable_M24SR_RF &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_RFConfig
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[bb]"></a>Event</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, menu.o(i.Event))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Event &rArr; ReadKey
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
</UL>

<P><STRONG><a name="[a7]"></a>Hex2Char</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, menu.o(i.Hex2Char))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Hex2Char
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
</UL>

<P><STRONG><a name="[1]"></a>IdleFunc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menu.o(i.IdleFunc))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>LaunchDemoApp</STRONG> (Thumb, 606 bytes, Stack size 336 bytes, menu.o(i.LaunchDemoApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = LaunchDemoApp &rArr; TT4_ReadMyApp &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteNDEF
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadMyApp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_AddAAR
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STProprietary_GPOConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLED_On
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Event
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>Load_BT_NDEF</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, menu.o(i.Load_BT_NDEF))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Load_BT_NDEF &rArr; TT4_WriteNDEF &rArr; NDEF_WriteNDEF &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteNDEF
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetMacAddr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Enable
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char2Hex
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>Load_URI_Tel</STRONG> (Thumb, 62 bytes, Stack size 896 bytes, menu.o(i.Load_URI_Tel))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = Load_URI_Tel &rArr; TT4_WriteURI &rArr; NDEF_WriteURI &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteURI
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>Load_URI_URL</STRONG> (Thumb, 78 bytes, Stack size 896 bytes, menu.o(i.Load_URI_URL))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = Load_URI_URL &rArr; TT4_WriteURI &rArr; NDEF_WriteURI &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteURI
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[158]"></a>Menu_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, menu.o(i.Menu_Init))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[1a]"></a>ProductPres</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, menu.o(i.ProductPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ProductPres &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP_FAT
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayJoyStick
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>ReadEmail</STRONG> (Thumb, 160 bytes, Stack size 672 bytes, menu.o(i.ReadEmail))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = ReadEmail &rArr; TT4_ReadEmail &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadEmail
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>ReadGeo</STRONG> (Thumb, 142 bytes, Stack size 152 bytes, menu.o(i.ReadGeo))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = ReadGeo &rArr; TT4_ReadGeo &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadGeo
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[97]"></a>ReadKey</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, menu.o(i.ReadKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReadKey
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Event
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayJoyStick
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[e]"></a>ReadSMS</STRONG> (Thumb, 154 bytes, Stack size 328 bytes, menu.o(i.ReadSMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = ReadSMS &rArr; TT4_ReadSMS &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadSMS
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>ReadURI</STRONG> (Thumb, 212 bytes, Stack size 896 bytes, menu.o(i.ReadURI))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = ReadURI &rArr; TT4_ReadURI &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadURI
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDebounce
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntExtOnOffConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>ReadVcard</STRONG> (Thumb, 82 bytes, Stack size 704 bytes, menu.o(i.ReadVcard))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = ReadVcard &rArr; TT4_ReadVcard &rArr; NDEF_IdentifyNDEF &rArr; NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_ReadVcard
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>ReturnFunc</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, menu.o(i.ReturnFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ReturnFunc &rArr; ShowMenuIcons &rArr; SelFunc &rArr; DisplayMenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor &rArr; LCD_WriteData &rArr; LCD_CtrlLinesWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenu
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>SuperUser</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, menu.o(i.SuperUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SuperUser &rArr; ISO7816_DisableAllPassword &rArr; M24SR_OpenNDEFSession &rArr; M24SR_SelectApplication &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISO7816_DisableAllPassword
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[72]"></a>WaitDebounce</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menu.o(i.WaitDebounce))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WaitDebounce &rArr; ReadKey
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LaunchDemoApp
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPO_RF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Info
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayURI
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySMS
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayGeo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEmail
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutFunc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuIcons
</UL>

<P><STRONG><a name="[77]"></a>WaitUserAction</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, menu.o(i.WaitUserAction))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WaitUserAction &rArr; ReadKey
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKey
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadURI
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSMS
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGeo
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEmail
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProductPres
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_BT_NDEF
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_M24SR_RF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_BT_Pairing
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaylimitedAccess
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVcard
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnLockPassword
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayNormalMode
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLockPassword
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayDwLdPhoneAppMessage
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_M24SR_RF
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AntennaPres
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutFunc
</UL>

<P><STRONG><a name="[f]"></a>WriteEmail</STRONG> (Thumb, 118 bytes, Stack size 680 bytes, menu.o(i.WriteEmail))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = WriteEmail &rArr; TT4_WriteEmail &rArr; NDEF_WriteEmail &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteEmail
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>WriteGeo</STRONG> (Thumb, 94 bytes, Stack size 160 bytes, menu.o(i.WriteGeo))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = WriteGeo &rArr; TT4_WriteGeo &rArr; NDEF_WriteGeo &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteGeo
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>WriteSMS</STRONG> (Thumb, 94 bytes, Stack size 336 bytes, menu.o(i.WriteSMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = WriteSMS &rArr; TT4_WriteSMS &rArr; NDEF_WriteSMS &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteSMS
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>WriteVcard</STRONG> (Thumb, 244 bytes, Stack size 712 bytes, menu.o(i.WriteVcard))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = WriteVcard &rArr; TT4_WriteNDEF &rArr; NDEF_WriteNDEF &rArr; M24SR_WriteData &rArr; M24SR_UpdateBinary &rArr; M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TT4_WriteNDEF
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessageOnGoing
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayErrorMessage
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[167]"></a>TimerDelay_ms_Config</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, hw_config.o(i.TimerDelay_ms_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_UpdateRequestConfig
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[16b]"></a>TimerDelay_us_Config</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hw_config.o(i.TimerDelay_us_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_UpdateRequestConfig
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>

<P><STRONG><a name="[15b]"></a>TimerTimestamp_us_Config</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, hw_config.o(i.TimerTimestamp_us_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TimerTimestamp_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_UpdateRequestConfig
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartPerfMeasurement
</UL>

<P><STRONG><a name="[12a]"></a>IsSBlock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_m24sr.o(i.IsSBlock))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
</UL>

<P><STRONG><a name="[f6]"></a>M24SR_BuildIBlockCommand</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, drv_m24sr.o(i.M24SR_BuildIBlockCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ComputeCrc
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectSystemfile
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectNDEFfile
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectCCfile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_STReadBinary
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadBinary
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableVerificationRequirement
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnablePermanentState
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisablePermanentState
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ChangeReferenceData
</UL>

<P><STRONG><a name="[f7]"></a>M24SR_ComputeCrc</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, drv_m24sr.o(i.M24SR_ComputeCrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_FWTExtension
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_BuildIBlockCommand
</UL>

<P><STRONG><a name="[10a]"></a>M24SR_FWTExtension</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, drv_m24sr.o(i.M24SR_FWTExtension))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = M24SR_FWTExtension &rArr; M24SR_IsAnswerReady &rArr; M24SR_PollI2C &rArr; delay_us &rArr; TimerDelay_us_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsCorrectCRC16Residue
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ComputeCrc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SendI2Ccommand
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReceiveI2Cresponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_IsAnswerReady
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
</UL>

<P><STRONG><a name="[112]"></a>M24SR_InitStructure</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, drv_m24sr.o(i.M24SR_InitStructure))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Init
</UL>

<P><STRONG><a name="[fc]"></a>M24SR_IsCorrectCRC16Residue</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, drv_m24sr.o(i.M24SR_IsCorrectCRC16Residue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = M24SR_IsCorrectCRC16Residue &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ComputeCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_Verify
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_UpdateBinary
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectSystemfile
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectNDEFfile
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectCCfile
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_SelectApplication
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_STReadBinary
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadBinary
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnableVerificationRequirement
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_EnablePermanentState
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisableVerificationRequirement
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_DisablePermanentState
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ChangeReferenceData
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_FWTExtension
</UL>

<P><STRONG><a name="[fe]"></a>M24SR_UpdateCrc</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, drv_m24sr.o(i.M24SR_UpdateCrc))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ComputeCrc
</UL>

<P><STRONG><a name="[13c]"></a>NDEF_Parse_WellKnowType</STRONG> (Thumb, 698 bytes, Stack size 24 bytes, lib_ndef_uri.o(i.NDEF_Parse_WellKnowType))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NDEF_Parse_WellKnowType
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadURI
</UL>

<P><STRONG><a name="[132]"></a>NDEF_FillSMSStruct</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, lib_ndef_sms.o(i.NDEF_FillSMSStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NDEF_FillSMSStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadURI_SMS
</UL>

<P><STRONG><a name="[143]"></a>NDEF_ReadURI_SMS</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lib_ndef_sms.o(i.NDEF_ReadURI_SMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NDEF_ReadURI_SMS &rArr; NDEF_FillSMSStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillSMSStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadSMS
</UL>

<P><STRONG><a name="[130]"></a>NDEF_FillEmailStruct</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, lib_ndef_email.o(i.NDEF_FillEmailStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = NDEF_FillEmailStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadURI_Email
</UL>

<P><STRONG><a name="[13e]"></a>NDEF_ReadURI_Email</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lib_ndef_email.o(i.NDEF_ReadURI_Email))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = NDEF_ReadURI_Email &rArr; NDEF_FillEmailStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillEmailStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadEmail
</UL>

<P><STRONG><a name="[12d]"></a>NDEF_ExtractVcard</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, lib_ndef_vcard.o(i.NDEF_ExtractVcard))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NDEF_ExtractVcard &rArr; NDEF_FillVcardStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillVcardStruct
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadVcard
</UL>

<P><STRONG><a name="[12e]"></a>NDEF_FillVcardStruct</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, lib_ndef_vcard.o(i.NDEF_FillVcardStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NDEF_FillVcardStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ExtractVcard
</UL>

<P><STRONG><a name="[131]"></a>NDEF_FillGeoStruct</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, lib_ndef_geo.o(i.NDEF_FillGeoStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NDEF_FillGeoStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadURI_Geo
</UL>

<P><STRONG><a name="[140]"></a>NDEF_ReadURI_Geo</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lib_ndef_geo.o(i.NDEF_ReadURI_Geo))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NDEF_ReadURI_Geo &rArr; NDEF_FillGeoStruct &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_FillGeoStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadGeo
</UL>

<P><STRONG><a name="[12f]"></a>NDEF_Extract_M24SRDiscoveryApp_Input</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, lib_ndef_myapp.o(i.NDEF_Extract_M24SRDiscoveryApp_Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NDEF_Extract_M24SRDiscoveryApp_Input
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ReadMyApp
</UL>

<P><STRONG><a name="[136]"></a>NDEF_IdentifySPRecord</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, lib_ndef.o(i.NDEF_IdentifySPRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = NDEF_IdentifySPRecord &rArr;  NDEF_ParseRecordHeader (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseRecordHeader
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseSP
</UL>

<P><STRONG><a name="[134]"></a>NDEF_IsNDEFPresent</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lib_ndef.o(i.NDEF_IsNDEFPresent))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = NDEF_IsNDEFPresent &rArr; M24SR_ReadData &rArr; M24SR_ReadBinary &rArr; M24SR_BuildIBlockCommand &rArr; M24SR_ComputeCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M24SR_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
</UL>

<P><STRONG><a name="[137]"></a>NDEF_ParseForumExternalType</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lib_ndef.o(i.NDEF_ParseForumExternalType))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NDEF_ParseForumExternalType &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseRecordHeader
</UL>

<P><STRONG><a name="[138]"></a>NDEF_ParseMediaType</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lib_ndef.o(i.NDEF_ParseMediaType))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NDEF_ParseMediaType &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseRecordHeader
</UL>

<P><STRONG><a name="[135]"></a>NDEF_ParseRecordHeader</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lib_ndef.o(i.NDEF_ParseRecordHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = NDEF_ParseRecordHeader &rArr; NDEF_ParseWellKnownType &rArr; NDEF_ParseSP &rArr; NDEF_IdentifySPRecord &rArr;  NDEF_ParseRecordHeader (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseWellKnownType
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseMediaType
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseForumExternalType
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifySPRecord
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifyNDEF
</UL>

<P><STRONG><a name="[13a]"></a>NDEF_ParseSP</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, lib_ndef.o(i.NDEF_ParseSP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = NDEF_ParseSP &rArr; NDEF_IdentifySPRecord &rArr;  NDEF_ParseRecordHeader (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_IdentifySPRecord
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseWellKnownType
</UL>

<P><STRONG><a name="[13b]"></a>NDEF_ParseURI</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lib_ndef.o(i.NDEF_ParseURI))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = NDEF_ParseURI &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseWellKnownType
</UL>

<P><STRONG><a name="[139]"></a>NDEF_ParseWellKnownType</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, lib_ndef.o(i.NDEF_ParseWellKnownType))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NDEF_ParseWellKnownType &rArr; NDEF_ParseSP &rArr; NDEF_IdentifySPRecord &rArr;  NDEF_ParseRecordHeader (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseURI
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseSP
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDEF_ParseRecordHeader
</UL>

<P><STRONG><a name="[e2]"></a>delay</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, drv_lcdspi_ili9341.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
</UL>

<P><STRONG><a name="[7c]"></a>BT_AnswerReady</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, drv_bluetooth.o(i.BT_AnswerReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BT_AnswerReady &rArr; delay_ms &rArr; TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetMacAddr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Enable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Disable
</UL>

<P><STRONG><a name="[7d]"></a>BT_CLK_Configuration</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_bluetooth.o(i.BT_CLK_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BT_CLK_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[84]"></a>BT_GPIO_Configuration</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, drv_bluetooth.o(i.BT_GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BT_GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[82]"></a>BT_GetAnswer</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drv_bluetooth.o(i.BT_GetAnswer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BT_GetAnswer
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetMacAddr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Enable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Disable
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsDevicePresent
</UL>

<P><STRONG><a name="[88]"></a>BT_IdentifyEvent</STRONG> (Thumb, 604 bytes, Stack size 8 bytes, drv_bluetooth.o(i.BT_IdentifyEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BT_IdentifyEvent &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[8f]"></a>BT_IsDevicePresent</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, drv_bluetooth.o(i.BT_IsDevicePresent))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BT_IsDevicePresent &rArr; delay_ms &rArr; TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_SendCommand
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetAnswer
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[8b]"></a>BT_Reset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_bluetooth.o(i.BT_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BT_Reset &rArr; delay_ms &rArr; TimerDelay_ms_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
</UL>

<P><STRONG><a name="[81]"></a>BT_SendCommand</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, drv_bluetooth.o(i.BT_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BT_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetMacAddr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Enable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Disable
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_IsDevicePresent
</UL>

<P><STRONG><a name="[156]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[157]"></a>SetSysClockTo72</STRONG> (Thumb, 212 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
